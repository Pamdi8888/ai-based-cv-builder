{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nexport class MainComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n    this.selectedFile = null;\n    this.mainForm = this.fb.group({\n      full_name: ['', [Validators.required, Validators.minLength(3)]],\n      date_of_birth: ['', [Validators.required]],\n      mail: ['', [Validators.required, Validators.email]],\n      marital_status: [''],\n      hobbies: [''],\n      dream_sector1: [''],\n      dream_sector2: [''],\n      career_plans: [''],\n      additional_info: [''],\n      minor_course_details: [''],\n      skills: [''],\n      transaction_id: [''],\n      prof_summary: [''],\n      // password: ['', [Validators.required, Validators.minLength(6)]],\n      // template_id: [1, [Validators.required]],\n      languages: this.fb.array([this.createLanguage()]),\n      education: this.fb.array([this.createEducation()]),\n      projects: this.fb.array([this.createProject()]),\n      social_accounts: this.fb.array([this.createSocialAccount()]),\n      work_experience: this.fb.array([this.createWorkExperience()]),\n      internships: this.fb.array([this.createInternship()]),\n      volunteer_activities: this.fb.array([this.createVolunteerActivity()]),\n      accomplishments: this.fb.array([this.createAccomplishment()]),\n      positions_of_responsibility: this.fb.array([this.createPositionOfResponsibility()]),\n      extra_curriculars: this.fb.array([this.createExtraCurricular()]),\n      //  documents: this.fb.array([this.createDocument()])\n      certifications: this.fb.array([this.createCertification()]),\n      competitions: this.fb.array([this.createCompetition()]),\n      conferences_workshops: this.fb.array([this.createConferenceWorkshop()]),\n      test_scores: this.fb.array([this.createTestScore()]),\n      patents_publications: this.fb.array([this.createPatentPublication()]),\n      scholarships: this.fb.array([this.createScholarship()]),\n      photograph: ['']\n    });\n  }\n  ngOnInit() {}\n  // Getter methods for form arrays\n  get languagesFormArray() {\n    return this.mainForm.get('languages');\n  }\n  get educationFormArray() {\n    return this.mainForm.get('education');\n  }\n  get projectsFormArray() {\n    return this.mainForm.get('projects');\n  }\n  get socialAccountsFormArray() {\n    return this.mainForm.get('social_accounts');\n  }\n  get workExperienceFormArray() {\n    return this.mainForm.get('work_experience');\n  }\n  get internshipsFormArray() {\n    return this.mainForm.get('internships');\n  }\n  get volunteerActivitiesFormArray() {\n    return this.mainForm.get('volunteer_activities');\n  }\n  get accomplishmentsFormArray() {\n    return this.mainForm.get('accomplishments');\n  }\n  get positionsOfResponsibilityFormArray() {\n    return this.mainForm.get('positions_of_responsibility');\n  }\n  get extraCurricularsFormArray() {\n    return this.mainForm.get('extra_curriculars');\n  }\n  //get documentsFormArray() { return this.mainForm.get('documents') as FormArray; }\n  get certificationsFormArray() {\n    return this.mainForm.get('certifications');\n  }\n  get competitionsFormArray() {\n    return this.mainForm.get('competitions');\n  }\n  get conferencesWorkshopsFormArray() {\n    return this.mainForm.get('conferences_workshops');\n  }\n  get testScoresFormArray() {\n    return this.mainForm.get('test_scores');\n  }\n  get patentsPublicationsFormArray() {\n    return this.mainForm.get('patents_publications');\n  }\n  get scholarshipsFormArray() {\n    return this.mainForm.get('scholarships');\n  }\n  // Methods to add new form groups to form arrays\n  addLanguage() {\n    this.languagesFormArray.push(this.createLanguage());\n  }\n  addEducation() {\n    this.educationFormArray.push(this.createEducation());\n  }\n  addProject() {\n    this.projectsFormArray.push(this.createProject());\n  }\n  addSocialAccount() {\n    this.socialAccountsFormArray.push(this.createSocialAccount());\n  }\n  addWorkExperience() {\n    this.workExperienceFormArray.push(this.createWorkExperience());\n  }\n  addInternship() {\n    this.internshipsFormArray.push(this.createInternship());\n  }\n  addVolunteerActivity() {\n    this.volunteerActivitiesFormArray.push(this.createVolunteerActivity());\n  }\n  addAccomplishment() {\n    this.accomplishmentsFormArray.push(this.createAccomplishment());\n  }\n  addPositionOfResponsibility() {\n    this.positionsOfResponsibilityFormArray.push(this.createPositionOfResponsibility());\n  }\n  addExtraCurricular() {\n    this.extraCurricularsFormArray.push(this.createExtraCurricular());\n  }\n  //addDocument() { this.documentsFormArray.push(this.createDocument()); }\n  addCertification() {\n    this.certificationsFormArray.push(this.createCertification());\n  }\n  addCompetition() {\n    this.competitionsFormArray.push(this.createCompetition());\n  }\n  addConferenceWorkshop() {\n    this.conferencesWorkshopsFormArray.push(this.createConferenceWorkshop());\n  }\n  addTestScore() {\n    this.testScoresFormArray.push(this.createTestScore());\n  }\n  addPatentPublication() {\n    this.patentsPublicationsFormArray.push(this.createPatentPublication());\n  }\n  addScholarship() {\n    this.scholarshipsFormArray.push(this.createScholarship());\n  }\n  // Methods to create form groups\n  createLanguage() {\n    return this.fb.group({\n      language: [''],\n      proficiency: ['']\n    });\n  }\n  createEducation() {\n    return this.fb.group({\n      grade_year: [''],\n      grad_year: [''],\n      percentage_cgpa: [''],\n      specialization: [''],\n      institution: ['']\n    });\n  }\n  createProject() {\n    return this.fb.group({\n      title: [''],\n      domain: [''],\n      duration: [''],\n      description: [''],\n      url: ['']\n    });\n  }\n  createSocialAccount() {\n    return this.fb.group({\n      name: [''],\n      url: ['']\n    });\n  }\n  createWorkExperience() {\n    return this.fb.group({\n      role: [''],\n      cause: [''],\n      description: [''],\n      organization: ['']\n    });\n  }\n  createInternship() {\n    return this.fb.group({\n      role: [''],\n      cause: [''],\n      description: [''],\n      organization: ['']\n    });\n  }\n  createVolunteerActivity() {\n    return this.fb.group({\n      role: [''],\n      cause: [''],\n      description: [''],\n      organization: ['']\n    });\n  }\n  createAccomplishment() {\n    return this.fb.group({\n      name: [''],\n      description: [''],\n      date: [''],\n      //  type: [''],\n      organization: ['']\n    });\n  }\n  createPositionOfResponsibility() {\n    return this.fb.group({\n      role: [''],\n      cause: [''],\n      description: [''],\n      organization: ['']\n    });\n  }\n  createExtraCurricular() {\n    return this.fb.group({\n      name: [''],\n      category: [''],\n      description: ['']\n    });\n  }\n  // createDocument(): FormGroup {\n  //   return this.fb.group({\n  //     name: [''],\n  //     category: [''],\n  //     description: ['']\n  //   });\n  // }\n  createCertification() {\n    return this.fb.group({\n      name: [''],\n      date: [''],\n      organization: ['']\n    });\n  }\n  createCompetition() {\n    return this.fb.group({\n      name: [''],\n      date: [''],\n      position: [''],\n      organization: ['']\n    });\n  }\n  createConferenceWorkshop() {\n    return this.fb.group({\n      name: [''],\n      date: [''],\n      description: [''],\n      organization: ['']\n    });\n  }\n  createTestScore() {\n    return this.fb.group({\n      name: [''],\n      date: [''],\n      score: ['']\n    });\n  }\n  createPatentPublication() {\n    return this.fb.group({\n      name: [''],\n      date: [''],\n      description: [''],\n      organization: ['']\n    });\n  }\n  createScholarship() {\n    return this.fb.group({\n      name: [''],\n      date: [''],\n      description: [''],\n      organization: ['']\n    });\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file && (file.type === 'image/jpeg' || file.type === 'image/jpg')) {\n      this.selectedFile = file;\n    } else {\n      alert('Please select a valid .jpg or .jpeg file.');\n      this.selectedFile = null;\n    }\n  }\n  onSubmit() {\n    if (this.mainForm.valid) {\n      const formData = new FormData();\n      // Append form data\n      for (const key in this.mainForm.value) {\n        formData.append(key, this.mainForm.value[key]);\n      }\n      // Append the selected file\n      if (this.selectedFile) {\n        formData.append('photograph', this.selectedFile, this.selectedFile.name);\n      }\n      console.log('FormData:', formData);\n      // Send formData to database\n      this.http.post('http://127.0.0.1:5000/user/add_full', formData, {\n        responseType: 'text'\n      }).subscribe(response => {\n        console.log('Form Submitted Successfully:', response);\n      }, error => {\n        console.error('Error updating Database:', error);\n      });\n      // Send formData to your server\n      this.http.post('http://127.0.0.1:5000/static', formData, {\n        responseType: 'text'\n      }).subscribe(response => {\n        console.log('Form Submitted');\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.document.write(response);\n          newWindow.document.close();\n        } else {\n          // console.log(response);\n          console.error('Failed to open new window');\n        }\n      }, error => {\n        console.error('Error submitting form:', error);\n      });\n    } else {\n      console.log('Form is invalid');\n    }\n  }\n}\nMainComponent.ɵfac = function MainComponent_Factory(t) {\n  return new (t || MainComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nMainComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MainComponent,\n  selectors: [[\"app-main\"]],\n  decls: 0,\n  vars: 0,\n  template: function MainComponent_Template(rf, ctx) {},\n  styles: [\"select[_ngcontent-%COMP%] {\\n  height: 40px;\\n  padding: 5px;\\n  border-radius: 0.375rem;\\n}\\n\\n.isinvalid[_ngcontent-%COMP%] {\\n  border: 1px solid #dc3545;\\n}\\n\\nlabel[_ngcontent-%COMP%], h6[_ngcontent-%COMP%] {\\n  color:#007bff;\\n  margin-bottom: 10px;\\n}\\n\\n.formbutton[_ngcontent-%COMP%] {\\n  background-color: #ffffff;\\n  border: 1px solid #007bff;\\n  color: #007bff;\\n}\\n\\n\\n\\n.present[_ngcontent-%COMP%]{\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNaLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTs7RUFFRSxhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHlCQUF5QjtFQUN6QixjQUFjO0FBQ2hCOzs7O0FBSUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyJzZWxlY3Qge1xuICBoZWlnaHQ6IDQwcHg7XG4gIHBhZGRpbmc6IDVweDtcbiAgYm9yZGVyLXJhZGl1czogMC4zNzVyZW07XG59XG5cbi5pc2ludmFsaWQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjZGMzNTQ1O1xufVxuXG5sYWJlbCxcbmg2IHtcbiAgY29sb3I6IzAwN2JmZjtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLmZvcm1idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDA3YmZmO1xuICBjb2xvcjogIzAwN2JmZjtcbn1cblxuXG5cbi5wcmVzZW50e1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","MainComponent","constructor","fb","http","mainForm","group","full_name","required","minLength","date_of_birth","mail","email","marital_status","hobbies","dream_sector1","dream_sector2","career_plans","additional_info","minor_course_details","skills","transaction_id","prof_summary","languages","array","createLanguage","education","createEducation","projects","createProject","social_accounts","createSocialAccount","work_experience","createWorkExperience","internships","createInternship","volunteer_activities","createVolunteerActivity","accomplishments","createAccomplishment","positions_of_responsibility","createPositionOfResponsibility","extra_curriculars","createExtraCurricular","certifications","createCertification","competitions","createCompetition","conferences_workshops","createConferenceWorkshop","test_scores","createTestScore","patents_publications","createPatentPublication","scholarships","createScholarship","photograph","ngOnInit","languagesFormArray","get","educationFormArray","projectsFormArray","socialAccountsFormArray","workExperienceFormArray","internshipsFormArray","volunteerActivitiesFormArray","accomplishmentsFormArray","positionsOfResponsibilityFormArray","extraCurricularsFormArray","certificationsFormArray","competitionsFormArray","conferencesWorkshopsFormArray","testScoresFormArray","patentsPublicationsFormArray","scholarshipsFormArray","addLanguage","push","addEducation","addProject","addSocialAccount","addWorkExperience","addInternship","addVolunteerActivity","addAccomplishment","addPositionOfResponsibility","addExtraCurricular","addCertification","addCompetition","addConferenceWorkshop","addTestScore","addPatentPublication","addScholarship","language","proficiency","grade_year","grad_year","percentage_cgpa","specialization","institution","title","domain","duration","description","url","name","role","cause","organization","date","category","position","score","onFileSelected","event","file","target","files","type","selectedFile","alert","onSubmit","valid","formData","FormData","key","value","append","console","log","post","responseType","subscribe","response","error","newWindow","window","open","document","write","close","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["/Users/vibhorbarguje/Desktop/ps/ai-based-cv-builder/front/src/app/main/main.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormArray, Validators, FormGroup} from '@angular/forms';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport {subjectValidator} from 'src/validators/subject-validator';\nimport {degreeValidator} from 'src/validators/degree-validator';\nimport {requiredFieldValidator} from 'src/validators/required-field-validator';\nimport {dateValidator} from 'src/validators/date-validator';\nimport {emailValidator} from 'src/validators/email-validator';\nimport {passwordValidator} from 'src/validators/password-validator';\nimport {templateIdValidator} from 'src/validators/template-id-validator';\nimport {graduationYearValidator} from 'src/validators/graduation-year-validator';\nimport {HttpClient} from '@angular/common/http';\n\n\n@Component({\n    selector: 'app-main',\n    templateUrl: './main.component.html',\n    styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n    mainForm: FormGroup;\n    selectedFile: File | null = null;\n\n    constructor(private fb: FormBuilder, private http: HttpClient) {\n        this.mainForm = this.fb.group({\n            full_name: ['', [Validators.required, Validators.minLength(3)]],\n            date_of_birth: ['', [Validators.required]],\n            mail: ['', [Validators.required, Validators.email]],\n            marital_status: [''],\n            hobbies: [''],\n            dream_sector1: [''],\n            dream_sector2: [''],\n            career_plans: [''],\n            additional_info: [''],\n            minor_course_details: [''],\n            skills: [''],\n            transaction_id: [''],\n            prof_summary: [''],\n            // password: ['', [Validators.required, Validators.minLength(6)]],\n            // template_id: [1, [Validators.required]],\n            languages: this.fb.array([this.createLanguage()]),\n            education: this.fb.array([this.createEducation()]),\n            projects: this.fb.array([this.createProject()]),\n            social_accounts: this.fb.array([this.createSocialAccount()]),\n            work_experience: this.fb.array([this.createWorkExperience()]),\n            internships: this.fb.array([this.createInternship()]),\n            volunteer_activities: this.fb.array([this.createVolunteerActivity()]),\n            accomplishments: this.fb.array([this.createAccomplishment()]),\n            positions_of_responsibility: this.fb.array([this.createPositionOfResponsibility()]),\n            extra_curriculars: this.fb.array([this.createExtraCurricular()]),\n            //  documents: this.fb.array([this.createDocument()])\n            certifications: this.fb.array([this.createCertification()]),\n            competitions: this.fb.array([this.createCompetition()]),\n            conferences_workshops: this.fb.array([this.createConferenceWorkshop()]),\n            test_scores: this.fb.array([this.createTestScore()]),\n            patents_publications: this.fb.array([this.createPatentPublication()]),\n            scholarships: this.fb.array([this.createScholarship()]),\n            photograph: ['']\n        });\n    }\n\n    ngOnInit(): void {\n    }\n\n    // Getter methods for form arrays\n    get languagesFormArray() {\n        return this.mainForm.get('languages') as FormArray;\n    }\n\n    get educationFormArray() {\n        return this.mainForm.get('education') as FormArray;\n    }\n\n    get projectsFormArray() {\n        return this.mainForm.get('projects') as FormArray;\n    }\n\n    get socialAccountsFormArray() {\n        return this.mainForm.get('social_accounts') as FormArray;\n    }\n\n    get workExperienceFormArray() {\n        return this.mainForm.get('work_experience') as FormArray;\n    }\n\n    get internshipsFormArray() {\n        return this.mainForm.get('internships') as FormArray;\n    }\n\n    get volunteerActivitiesFormArray() {\n        return this.mainForm.get('volunteer_activities') as FormArray;\n    }\n\n    get accomplishmentsFormArray() {\n        return this.mainForm.get('accomplishments') as FormArray;\n    }\n\n    get positionsOfResponsibilityFormArray() {\n        return this.mainForm.get('positions_of_responsibility') as FormArray;\n    }\n\n    get extraCurricularsFormArray() {\n        return this.mainForm.get('extra_curriculars') as FormArray;\n    }\n\n    //get documentsFormArray() { return this.mainForm.get('documents') as FormArray; }\n    get certificationsFormArray() {\n        return this.mainForm.get('certifications') as FormArray;\n    }\n\n    get competitionsFormArray() {\n        return this.mainForm.get('competitions') as FormArray;\n    }\n\n    get conferencesWorkshopsFormArray() {\n        return this.mainForm.get('conferences_workshops') as FormArray;\n    }\n\n    get testScoresFormArray() {\n        return this.mainForm.get('test_scores') as FormArray;\n    }\n\n    get patentsPublicationsFormArray() {\n        return this.mainForm.get('patents_publications') as FormArray;\n    }\n\n    get scholarshipsFormArray() {\n        return this.mainForm.get('scholarships') as FormArray;\n    }\n\n    // Methods to add new form groups to form arrays\n    addLanguage() {\n        this.languagesFormArray.push(this.createLanguage());\n    }\n\n    addEducation() {\n        this.educationFormArray.push(this.createEducation());\n    }\n\n    addProject() {\n        this.projectsFormArray.push(this.createProject());\n    }\n\n    addSocialAccount() {\n        this.socialAccountsFormArray.push(this.createSocialAccount());\n    }\n\n    addWorkExperience() {\n        this.workExperienceFormArray.push(this.createWorkExperience());\n    }\n\n    addInternship() {\n        this.internshipsFormArray.push(this.createInternship());\n    }\n\n    addVolunteerActivity() {\n        this.volunteerActivitiesFormArray.push(this.createVolunteerActivity());\n    }\n\n    addAccomplishment() {\n        this.accomplishmentsFormArray.push(this.createAccomplishment());\n    }\n\n    addPositionOfResponsibility() {\n        this.positionsOfResponsibilityFormArray.push(this.createPositionOfResponsibility());\n    }\n\n    addExtraCurricular() {\n        this.extraCurricularsFormArray.push(this.createExtraCurricular());\n    }\n\n    //addDocument() { this.documentsFormArray.push(this.createDocument()); }\n    addCertification() {\n        this.certificationsFormArray.push(this.createCertification());\n    }\n\n    addCompetition() {\n        this.competitionsFormArray.push(this.createCompetition());\n    }\n\n    addConferenceWorkshop() {\n        this.conferencesWorkshopsFormArray.push(this.createConferenceWorkshop());\n    }\n\n    addTestScore() {\n        this.testScoresFormArray.push(this.createTestScore());\n    }\n\n    addPatentPublication() {\n        this.patentsPublicationsFormArray.push(this.createPatentPublication());\n    }\n\n    addScholarship() {\n        this.scholarshipsFormArray.push(this.createScholarship());\n    }\n\n    // Methods to create form groups\n    createLanguage(): FormGroup {\n        return this.fb.group({\n            language: [''],\n            proficiency: ['']\n        });\n    }\n\n    createEducation(): FormGroup {\n        return this.fb.group({\n            grade_year: [''],\n            grad_year: [''],\n            percentage_cgpa: [''],\n            specialization: [''],\n            institution: ['']\n        });\n    }\n\n    createProject(): FormGroup {\n        return this.fb.group({\n            title: [''],\n            domain: [''],\n            duration: [''],\n            description: [''],\n            url: ['']\n        });\n    }\n\n    createSocialAccount(): FormGroup {\n        return this.fb.group({\n            name: [''],\n            url: ['']\n        });\n    }\n\n    createWorkExperience(): FormGroup {\n        return this.fb.group({\n            role: [''],\n            cause: [''],\n            description: [''],\n            organization: ['']\n        });\n    }\n\n    createInternship(): FormGroup {\n        return this.fb.group({\n            role: [''],\n            cause: [''],\n            description: [''],\n            organization: ['']\n        });\n    }\n\n    createVolunteerActivity(): FormGroup {\n        return this.fb.group({\n            role: [''],\n            cause: [''],\n            description: [''],\n            organization: ['']\n        });\n    }\n\n    createAccomplishment(): FormGroup {\n        return this.fb.group({\n            name: [''],\n            description: [''],\n            date: [''],\n            //  type: [''],\n            organization: ['']\n        });\n    }\n\n    createPositionOfResponsibility(): FormGroup {\n        return this.fb.group({\n            role: [''],\n            cause: [''],\n            description: [''],\n            organization: ['']\n        });\n    }\n\n    createExtraCurricular(): FormGroup {\n        return this.fb.group({\n            name: [''],\n            category: [''],\n            description: ['']\n        });\n    }\n\n    // createDocument(): FormGroup {\n    //   return this.fb.group({\n    //     name: [''],\n    //     category: [''],\n    //     description: ['']\n    //   });\n    // }\n\n    createCertification(): FormGroup {\n        return this.fb.group({\n            name: [''],\n            date: [''],\n            organization: ['']\n        });\n    }\n\n    createCompetition(): FormGroup {\n        return this.fb.group({\n            name: [''],\n            date: [''],\n            position: [''],\n            organization: ['']\n        });\n    }\n\n    createConferenceWorkshop(): FormGroup {\n        return this.fb.group({\n            name: [''],\n            date: [''],\n            description: [''],\n            organization: ['']\n        });\n    }\n\n    createTestScore(): FormGroup {\n        return this.fb.group({\n            name: [''],\n            date: [''],\n            score: ['']\n        });\n    }\n\n    createPatentPublication(): FormGroup {\n        return this.fb.group({\n            name: [''],\n            date: [''],\n            description: [''],\n            organization: ['']\n        });\n    }\n\n    createScholarship(): FormGroup {\n        return this.fb.group({\n            name: [''],\n            date: [''],\n            description: [''],\n            organization: ['']\n        });\n    }\n\n    onFileSelected(event: any): void {\n        const file = event.target.files[0];\n        if (file && (file.type === 'image/jpeg' || file.type === 'image/jpg')) {\n            this.selectedFile = file;\n\n        } else {\n            alert('Please select a valid .jpg or .jpeg file.');\n            this.selectedFile = null;\n\n        }\n    }\n\n    onSubmit(): void {\n        if (this.mainForm.valid) {\n            const formData = new FormData();\n\n            // Append form data\n            for (const key in this.mainForm.value) {\n                formData.append(key, this.mainForm.value[key]);\n            }\n\n            // Append the selected file\n            if (this.selectedFile) {\n                formData.append('photograph', this.selectedFile, this.selectedFile.name);\n            }\n\n            console.log('FormData:', formData);\n\n            // Send formData to database\n            this.http.post('http://127.0.0.1:5000/user/add_full', formData, {responseType: 'text'})\n                .subscribe(\n                    (response) => {\n                        console.log('Form Submitted Successfully:', response);\n                    },\n                    (error) => {\n                        console.error('Error updating Database:', error);\n                    }\n                );\n\n            // Send formData to your server\n            this.http.post('http://127.0.0.1:5000/static', formData, {responseType: 'text'})\n                .subscribe((response) => {\n                        console.log('Form Submitted');\n                        const newWindow = window.open();\n                        if (newWindow) {\n                            newWindow.document.write(response);\n                            newWindow.document.close();\n                        } else {\n                            // console.log(response);\n                            console.error('Failed to open new window');\n                        }\n                    }, (error) => {\n                        console.error('Error submitting form:', error);\n                    }\n                );\n        } else {\n            console.log('Form is invalid');\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}